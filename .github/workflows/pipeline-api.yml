name: RestAssured com Allure Report

on:
  push:
    branches: [ "main", "github-actions-api-pipeline" ]
  pull_request:
    branches: [ "main" ]

  #Para rodar a pipeline de forma manual!
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do C贸digo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Rodar Teste de Contrato
        run: mvn clean test -Dgroups="Health-Check" -Dallure.results.directory=allure-results

      - name: Upload Artefatos do Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-health-check
          path: allure-results


  contract-test:
    needs: health-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do C贸digo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Rodar Teste de Contrato
        run: mvn clean test -Dgroups="Contract" -Dallure.results.directory=allure-results

      - name: Upload Artefatos do Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-contract
          path: allure-results

  functional-test:
    needs: health-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do C贸digo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Rodar Teste de Contrato
        run: mvn clean test -Dgroups="Functional" -Dallure.results.directory=allure-results

      - name: Upload Artefatos do Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-functional
          path: allure-results

  report:
    runs-on: ubuntu-latest
    needs: [health-check, contract-test, functional-test]

    steps:
      - name: Download Allure Report Health-Check
        uses: actions/download-artifact@v4
        with:
          name: allure-results-health-check
          path: allure-reports/health-check

      - name: Download Allure Report Contract
        uses: actions/download-artifact@v4
        with:
          name: allure-results-contract
          path: allure-reports/contract

      - name: Download Allure Report Functional
        uses: actions/download-artifact@v4
        with:
          name: allure-results-functional
          path: allure-reports/functional

      - name: Copy Allure Reports to allure-results
        run: |
          mkdir -p allure-results
          if [ -d "allure-reports/health-check" ]; then cp -r allure-reports/health-check/* allure-results; fi
          if [ -d "allure-reports/contract" ]; then cp -r allure-reports/contract/* allure-results; fi
          if [ -d "allure-reports/functional" ]; then cp -r allure-reports/functional/* allure-results; fi
          if [ -d "allure-reports/regression" ]; then cp -r allure-reports/regression/* allure-results; fi
          

      - name: Download Hist贸rico de Testes
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: api-pipeline-report
          path: allure-history


      - name: Build Test Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          api-pipeline-report: api-pipeline-report
          allure_history: allure-history
          allure_results: allure-results


      - name: Publicar Report na Branch API-PIPELINE-REPORT
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: api-pipeline-report
          publish_dir: allure-history
